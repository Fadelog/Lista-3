#Questão 3 item a
class Circle:
    def __init__(self, p, q, raio, x, y): #(p, q) e (x, y) são respectivamente o centro do círculo e as coordenadas do ponto a ser analisado
        self.x=x
        self.y=y
        self.p=p
        self.q=q
        self.raio=raio
    def esta_dentro(self):
        distancia=((self.x-self.p)**2+(self.y-self.q)**2)**0.5 #formula da distância entre 2 pontos
        if distancia == self.raio:
            return "O ponto está sobre a circunferência"
        elif distancia < self.raio:
            return "O ponto está dentro da circunferência"
        else:
            return "O ponto está fora da circunferência"
circulo=Circle(0,0,1.0,2,2)
dist=circulo.esta_dentro()
print(dist) #A saída esperada é "O ponto está fora da circunferência"


#Questão 3 item b

class Linesegment:
    def __init__(self, p, q, m, n, x, y): #(p, q) e (m,n) são os extremos do segmento e (x,y) é o ponto que será avaliado
        self.p=p
        self.q=q
        self.m=m
        self.n=n
        self.x=x
        self.y=y
    def nosegmento(self):
        a=(self.n-self.q)/(self.m-self.p)
        b=self.n-a*self.m #esses dois passos foram usados para construir a equação da reta que passa por (p, q) e (m, n)
        if self.y==a*self.x+b: #aqui é checado se o ponto pertence a reta e está entre os 2 extremos
            if self.p<self.x and self.x<self.m: 
                if self.q<self.y and self.y<self.n:
                    return "O ponto está no segmento"
                elif self.n<self.y and self.y<self.q:
                    return "O ponto está no segmento"
                else:
                    return "O ponto não está no segmento"
            elif self.m<self.x and self.x<self.p:
                if self.q<self.y and self.y<self.n:
                    return "O ponto está no segmento"
                elif self.n<self.y and self.y<self.q:
                    return "O ponto está no segmento"
                else:
                    return "O ponto não está no segmento"
        else:
            return "O ponto não está no segmento"
pontos= Linesegment(1, 1, 0, 0, 0.5, 0.5)
esta_no_segmento=pontos.nosegmento()
print(esta_no_segmento) #a saída esperada nesse caso é "O ponto está no segmento"

#Questão 4

def segmento_no_circulo(x,y, p,q, m,n, raio):#(x, y) é o centro do circulo e (p, q) e (m,n) são os extremos do segmento
    distancia1=((x-p)**2+(y-q)**2)**0.5
    distancia2=((x-m)**2+(y-n)**2)**0.5
    if distancia1<raio and distancia2<raio:
      print("O segmento está totalmente contido no disco")
      return True
    else:
      print ("O segmento não está totalmente contido no disco")
      return False
segmento_no_circulo(0,0, 1,0, 0,1, 1.0)#A saída esperada é "O segmento não está totalmente contido no disco"

